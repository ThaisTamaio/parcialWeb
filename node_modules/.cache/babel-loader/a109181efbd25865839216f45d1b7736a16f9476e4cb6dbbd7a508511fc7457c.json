{"ast":null,"code":"var _jsxFileName = \"/Users/thaistamaio/Desktop/Universidad/7) Se\\u0301ptimo semestre/Web/parcial1Web/parcial1/src/views/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [fieldValues, setFieldValues] = useState({});\n  const {\n    isbn\n  } = useParams();\n  const [error, setError] = useState(null);\n  const {\n    state: {\n      userRole\n    }\n  } = useLocation();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://my.api.mockaroo.com/Books.json?key=13d161b0\");\n        if (!response.ok) {\n          throw new Error(\"Error al obtener los libros\");\n        }\n        const data = await response.json();\n        setBooks(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchBookDetails = async () => {\n      if (isbn) {\n        try {\n          const response = await fetch(`https://my.api.mockaroo.com/books/${isbn}.json?key=13d161b0`);\n          if (!response.ok) {\n            throw new Error(\"Error al obtener los detalles del libro\");\n          }\n          const data = await response.json();\n          setSelectedBook(data);\n        } catch (error) {\n          setError(error.message);\n        }\n      }\n    };\n    fetchBookDetails();\n  }, [isbn]);\n  useEffect(() => {\n    if (selectedBook) {\n      setFieldValues({\n        title: selectedBook.title,\n        author: selectedBook.author,\n        isbn: selectedBook.isbn,\n        publisher: selectedBook.publisher\n      });\n    }\n  }, [selectedBook]);\n  const handleInputChange = (field, value) => {\n    setFieldValues({\n      ...fieldValues,\n      [field]: value\n    });\n  };\n  const renderEditableField = (label, field) => {\n    const value = fieldValues[field];\n    return userRole ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value || '',\n        onChange: e => handleInputChange(field, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [label, \": \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cat\\xE1logo de Libros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: books.map(book => /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              onClick: () => setSelectedBook(book),\n              className: `book-card ${selectedBook && selectedBook.isbn === book.isbn ? \"selected\" : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: book.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, book.isbn, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: selectedBook && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Detalles del Libro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [renderEditableField('Título', 'title'), renderEditableField('Autor', 'author'), renderEditableField('ISBN', 'isbn'), renderEditableField('Editorial', 'publisher')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"u+xswc1e2suL7OIFSa5HIsdCVDw=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Container","Row","Col","Card","useLocation","jsxDEV","_jsxDEV","Home","_s","books","setBooks","selectedBook","setSelectedBook","fieldValues","setFieldValues","isbn","error","setError","state","userRole","fetchData","response","fetch","ok","Error","data","json","message","fetchBookDetails","title","author","publisher","handleInputChange","field","value","renderEditableField","label","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","Text","className","md","map","book","onClick","Body","Title","_c","$RefreshReg$"],"sources":["/Users/thaistamaio/Desktop/Universidad/7) Séptimo semestre/Web/parcial1Web/parcial1/src/views/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Home() {\n  const [books, setBooks] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [fieldValues, setFieldValues] = useState({});\n  const { isbn } = useParams();\n  const [error, setError] = useState(null);\n  const { state: { userRole } } = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://my.api.mockaroo.com/Books.json?key=13d161b0\");\n        if (!response.ok) {\n          throw new Error(\"Error al obtener los libros\");\n        }\n        const data = await response.json();\n        setBooks(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchBookDetails = async () => {\n      if (isbn) {\n        try {\n          const response = await fetch(`https://my.api.mockaroo.com/books/${isbn}.json?key=13d161b0`);\n          if (!response.ok) {\n            throw new Error(\"Error al obtener los detalles del libro\");\n          }\n          const data = await response.json();\n          setSelectedBook(data);\n        } catch (error) {\n          setError(error.message);\n        }\n      }\n    };\n\n    fetchBookDetails();\n  }, [isbn]);\n\n  useEffect(() => {\n    if (selectedBook) {\n      setFieldValues({\n        title: selectedBook.title,\n        author: selectedBook.author,\n        isbn: selectedBook.isbn,\n        publisher: selectedBook.publisher\n      });\n    }\n  }, [selectedBook]);\n\n  const handleInputChange = (field, value) => {\n    setFieldValues({\n      ...fieldValues,\n      [field]: value\n    });\n  };\n\n  const renderEditableField = (label, field) => {\n    const value = fieldValues[field];\n    return userRole ? (\n      <div>\n        <label>{label}:</label>\n        <input\n          type=\"text\"\n          value={value || ''}\n          onChange={(e) => handleInputChange(field, e.target.value)}\n        />\n      </div>\n    ) : (\n      <Card.Text>\n        {label}: {value}\n      </Card.Text>\n    );\n  };\n\n  return (\n    <Container className=\"home-container\">\n      <Row>\n        <Col md={6}>\n          <h2>Catálogo de Libros</h2>\n          <Row>\n            {books.map((book) => (\n              <Col md={4} key={book.isbn}>\n                <Card\n                  onClick={() => setSelectedBook(book)}\n                  className={`book-card ${\n                    selectedBook && selectedBook.isbn === book.isbn ? \"selected\" : \"\"\n                  }`}\n                >\n                  <Card.Body>\n                    <Card.Title>{book.title}</Card.Title>\n                    <Card.Text>{book.author}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n        <Col md={6}>\n          {selectedBook && (\n            <div className=\"book-details\">\n              <h2>Detalles del Libro</h2>\n              <Card>\n                <Card.Body>\n                  {renderEditableField('Título', 'title')}\n                  {renderEditableField('Autor', 'author')}\n                  {renderEditableField('ISBN', 'isbn')}\n                  {renderEditableField('Editorial', 'publisher')}\n                </Card.Body>\n              </Card>\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}